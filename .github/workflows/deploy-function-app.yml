name: Deploy LeaseLogic Function App

on:
  push:
    branches: [ main ]
    paths: [ 'src/**' ]
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'leaselogic-func-app'  # Set this to your function app name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/LeaseLogic.Functions'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Restore project dependencies'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet restore
        popd

    - name: 'Build project'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --no-restore
        popd

    - name: 'Run tests'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        # Add test command here when tests are available
        # dotnet test --configuration Release --no-build --verbosity normal
        popd

    - name: 'Publish project'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet publish --configuration Release --no-build --output ./output
        popd

    - name: 'Deploy to Azure Functions'
      uses: Azure/functions-action@v1
      id: deploy-to-function
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        slot-name: 'production'
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: 'Post deployment health check'
      shell: bash
      run: |
        # Wait a moment for deployment to complete
        sleep 30
        
        # Basic health check
        FUNCTION_URL="https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net"
        echo "Checking function app health at: $FUNCTION_URL"
        
        # Check if the function app is responding
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$FUNCTION_URL" || echo "000")
        if [ "$HTTP_STATUS" -eq "200" ] || [ "$HTTP_STATUS" -eq "404" ]; then
          echo "✅ Function app is responding (HTTP $HTTP_STATUS)"
        else
          echo "❌ Function app health check failed (HTTP $HTTP_STATUS)"
          exit 1
        fi